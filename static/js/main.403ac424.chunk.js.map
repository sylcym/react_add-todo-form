{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","title","completed","TodoList","todos","map","username","getUser","userId","usersFromServer","find","serverTodos","App","useState","setTodos","setUserId","setTitle","hasTitleError","setHasTitleError","hasUserError","setHasUserError","action","method","onSubmit","event","preventDefault","addTodo","Math","max","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.403ac424.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ninterface UserInfoProps {\n  user: User,\n}\n\nexport const UserInfo = ({ user }: UserInfoProps) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface TodoInfoProps {\n  todo: Todo,\n}\n\nexport const TodoInfo = ({ todo }: TodoInfoProps) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={`TodoInfo ${completed && 'TodoInfo--completed'}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface TodoListProps {\n  todos: Todo[],\n}\n\nexport const TodoList = ({ todos }: TodoListProps) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => <TodoInfo key={todo.id} todo={todo} />)}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const serverTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(serverTodos);\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const resetForm = () => {\n    setUserId(0);\n    setTitle('');\n    setHasTitleError(false);\n    setHasUserError(false);\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (!title) {\n      setHasTitleError(true);\n    }\n\n    if (!userId) {\n      setHasUserError(true);\n    }\n\n    if (title && userId) {\n      const newTodoId = Math.max(...serverTodos.map(todo => todo.id)) + 1;\n\n      const addTodo: Todo = {\n        id: newTodoId,\n        title,\n        completed: false,\n        userId: +userId,\n        user: getUser(userId),\n      };\n\n      setTodos([...todos, addTodo]);\n      resetForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              if (hasTitleError) {\n                setHasTitleError(false);\n              }\n            }}\n          />\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            name=\"user\"\n            value={userId}\n            onChange={(event) => {\n              setUserId(+event.target.value);\n              if (hasUserError) {\n                setHasUserError(false);\n              }\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {hasUserError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}